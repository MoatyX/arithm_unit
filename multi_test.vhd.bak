library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all; 

entity multi_test is 
	 port(Add,Multi,Divi,Sub,rst,clk : in std_ulogic;
		Operant1 :in std_ulogic_vector(3 downto 0);
		Operant2 :in std_ulogic_vector(3 downto 0);
		Result: out std_ulogic_vector(7 downto 0);
		seg0,seg1,seg2,seg3 :out std_ulogic_vector(6 downto 0));
end multi_test;
architecture Logic of multi_test is 
	SIGNAL abs_opA, abs_opB: std_ulogic_vector(3 downto 0);
	--signal count: unsigned	(3 downto 0);
	signal Solve: std_ulogic_vector (7 downto 0);
	signal once : std_ulogic;
begin 
Multiplizierer : process(Multi)
begin
	if(rising_edge(clk)) then 
		solve <=(abs_opB);
		abs_opA <= abs_opB;
	end if;
			
end process Multiplizierer;


end Logic;
